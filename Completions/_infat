#compdef infat
local context state state_descr line
_infat_commandname=$words[1]
typeset -A opt_args

_infat() {
    integer ret=1
    local -a args
    args+=(
        '(-c --config)'{-c,--config}'[Path to the configuration file.]:config:'
        '(-v --verbose)'{-v,--verbose}'[Enable verbose logging.]'
        '(-q --quiet)'{-q,--quiet}'[Quiet output.]'
        '--version[Show the version.]'
        '(-h --help)'{-h,--help}'[Show help information.]'
        '(-): :->command'
        '(-)*:: :->arg'
    )
    _arguments -w -s -S $args[@] && ret=0
    case $state in
        (command)
            local subcommands
            subcommands=(
                'info:Lists file association information.'
                'set:Sets an application association.'
                'help:Show subcommand help information.'
            )
            _describe "subcommand" subcommands
            ;;
        (arg)
            case ${words[1]} in
                (info)
                    _infat_info
                    ;;
                (set)
                    _infat_set
                    ;;
                (help)
                    _infat_help
                    ;;
            esac
            ;;
    esac

    return ret
}

_infat_info() {
    integer ret=1
    local -a args
    args+=(
        '(-a --app)'{-a,--app}'[Application name (e.g., '"'"'Google Chrome'"'"').]:app:'
        '(-e --ext)'{-e,--ext}'[File extension (without the dot, e.g., '"'"'html'"'"').]:ext:'
        '(-t --type)'{-t,--type}'[File type (e.g., text).]:type:(plain-text text csv image raw-image audio video movie mp4-audio quicktime mp4-movie archive sourcecode c-source cpp-source objc-source shell makefile data directory folder symlink executable unix-executable app-bundle)'
        '--version[Show the version.]'
        '(-h --help)'{-h,--help}'[Show help information.]'
    )
    _arguments -w -s -S $args[@] && ret=0

    return ret
}

_infat_set() {
    integer ret=1
    local -a args
    args+=(
        ':app-name:'
        '--ext[A file extension without leading dot.]:ext:'
        '--scheme[A URL scheme. ex: mailto.]:scheme:'
        '--type[A file class. ex: image]:type:(plain-text text csv image raw-image audio video movie mp4-audio quicktime mp4-movie archive sourcecode c-source cpp-source objc-source shell makefile data directory folder symlink executable unix-executable app-bundle)'
        '--version[Show the version.]'
        '(-h --help)'{-h,--help}'[Show help information.]'
    )
    _arguments -w -s -S $args[@] && ret=0

    return ret
}

_infat_help() {
    integer ret=1
    local -a args
    args+=(
        ':subcommands:'
        '--version[Show the version.]'
    )
    _arguments -w -s -S $args[@] && ret=0

    return ret
}


_custom_completion() {
    local completions=("${(@f)$($*)}")
    _describe '' completions
}

_infat
